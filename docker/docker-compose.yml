
services:
  # PostgreSQL Database
  postgresql:
    image: postgres:15-alpine
    container_name: trading_bot_postgresql
    environment:
      POSTGRES_DB: trading_bot
      POSTGRES_USER: ${DB_USERNAME:-trading_bot}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-trading_bot_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./services/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./configs/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./configs/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-trading_bot} -d trading_bot"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - trading_bot_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: trading_bot_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password} --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - trading_bot_network
    restart: unless-stopped

  # InfluxDB Time Series Database
  influxdb:
    image: influxdb:2.7-alpine
    container_name: trading_bot_influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD:-influxdb_password}
      DOCKER_INFLUXDB_INIT_ORG: trading_bot_dev
      DOCKER_INFLUXDB_INIT_BUCKET: trading_data_dev
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN:-trading_bot_token}
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - trading_bot_network
    restart: unless-stopped

volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local

networks:
  trading_bot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 