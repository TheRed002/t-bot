# Security headers configuration for T-Bot Frontend
# Institutional-grade security hardening

# Content Security Policy - Strict policy for trading application
add_header Content-Security-Policy "
    default-src 'self';
    script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: data:;
    style-src 'self' 'unsafe-inline' data: fonts.googleapis.com;
    img-src 'self' data: blob: https: *.tradingview.com *.investing.com;
    font-src 'self' data: fonts.gstatic.com;
    connect-src 'self' ws: wss: 
        *.binance.com *.binance.us 
        *.coinbase.com *.pro.coinbase.com 
        *.okx.com *.okex.com
        *.coingecko.com *.coinmarketcap.com;
    media-src 'self' data: blob:;
    object-src 'none';
    frame-src 'none';
    worker-src 'self' blob:;
    manifest-src 'self';
    form-action 'self';
    frame-ancestors 'none';
    base-uri 'self';
" always;

# Prevent clickjacking attacks
add_header X-Frame-Options "DENY" always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# Enable XSS protection
add_header X-XSS-Protection "1; mode=block" always;

# Control referrer information
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Prevent Adobe Flash and PDF files from loading
add_header X-Permitted-Cross-Domain-Policies "none" always;

# Disable DNS prefetching
add_header X-DNS-Prefetch-Control "off" always;

# Feature Policy / Permissions Policy
add_header Permissions-Policy "
    accelerometer=(),
    ambient-light-sensor=(),
    autoplay=(),
    battery=(),
    camera=(),
    cross-origin-isolated=(),
    display-capture=(),
    document-domain=(),
    encrypted-media=(),
    execution-while-not-rendered=(),
    execution-while-out-of-viewport=(),
    fullscreen=(self),
    geolocation=(),
    gyroscope=(),
    keyboard-map=(),
    magnetometer=(),
    microphone=(),
    midi=(),
    navigation-override=(),
    payment=(),
    picture-in-picture=(),
    publickey-credentials-get=(),
    screen-wake-lock=(),
    sync-xhr=(self),
    usb=(),
    web-share=(),
    xr-spatial-tracking=()
" always;

# Remove server information leakage
more_clear_headers Server;
more_clear_headers X-Powered-By;
more_clear_headers X-AspNet-Version;
more_clear_headers X-AspNetMvc-Version;

# Cache control for sensitive pages
location ~* ^/(login|auth|admin|api) {
    add_header Cache-Control "no-cache, no-store, must-revalidate, private" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
}

# Additional security for API endpoints
location ~* ^/api/ {
    # Prevent caching of API responses
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    
    # CORS headers for API (adjust as needed)
    add_header Access-Control-Allow-Origin "https://yourdomain.com" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Max-Age 3600 always;
    
    # Handle preflight requests
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "https://yourdomain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Max-Age 3600 always;
        add_header Content-Type text/plain;
        add_header Content-Length 0;
        return 204;
    }
}