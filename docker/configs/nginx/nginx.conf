# Nginx configuration for T-Bot Frontend
# Production-optimized with security hardening

# Main context
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /run/nginx/nginx.pid;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

# Events block - optimized for high performance
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP block
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security settings
    server_tokens off;
    more_clear_headers Server;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Client settings
    client_max_body_size 16M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Gzip compression
    include /etc/nginx/conf.d/gzip.conf;
    
    # Security headers
    include /etc/nginx/conf.d/security-headers.conf;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    log_format trading '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '$request_time $upstream_response_time '
                       '$connection $connection_requests';
    
    access_log /var/log/nginx/access.log trading buffer=32k flush=5s;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=100r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Upstream backend services
    upstream tbot_backend {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream tbot_websocket {
        least_conn;
        server websocket:8002 max_fails=3 fail_timeout=30s;
        server websocket:8003 max_fails=3 fail_timeout=30s backup;
        keepalive 32;
    }
    
    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        root /var/www/html;
        index index.html index.htm;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' ws: wss:; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';" always;
        
        # Connection limits
        limit_conn perip 20;
        limit_conn perserver 1000;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API proxy with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://tbot_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Authentication endpoints with stricter rate limiting
        location ~* ^/api/(auth|login|register) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://tbot_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # WebSocket proxy
        location /ws/ {
            limit_req zone=websocket burst=200 nodelay;
            
            proxy_pass http://tbot_websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_connect_timeout 7s;
            proxy_send_timeout 7s;
            proxy_read_timeout 300s;
            
            # Disable buffering for real-time data
            proxy_buffering off;
        }
        
        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # GZIP pre-compressed files
            location ~* \.(js|css)$ {
                gzip_static on;
            }
        }
        
        # HTML files with short caching
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
        
        # React Router - serve index.html for all routes
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers for HTML
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
            add_header X-XSS-Protection "1; mode=block" always;
        }
        
        # Deny access to sensitive files
        location ~* \.(env|config|conf|log|bak|backup|old|tmp|temp)$ {
            deny all;
            return 404;
        }
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /var/www/html;
        }
    }
    
    # HTTPS server block (for production with SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     # SSL configuration
    #     ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    #     ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     
    #     # Include the same location blocks as HTTP server
    # }
}