[tool:pytest]
# Pytest configuration for isolated testing
minversion = 6.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Enhanced isolation settings
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --asyncio-mode=auto
    --disable-warnings
    # Force garbage collection between tests
    --forked
    # Enable detailed output for isolation debugging
    -s
    # Fail fast on first error for isolation testing
    -x

# Custom markers for isolation testing
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    subprocess_isolate: marks tests for subprocess isolation
    integration: marks tests as integration tests
    isolation: marks tests that test isolation mechanisms
    bulletproof: marks tests that use bulletproof isolation

# Asyncio configuration
asyncio_mode = auto

# Test discovery
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Logging configuration for isolation debugging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings
timeout = 300
timeout_method = thread

# Coverage settings for isolation testing
addopts = --cov=src --cov-report=term-missing --cov-fail-under=0

# Parallel test execution (disabled for isolation testing)
# -n auto

# Test ordering (ensure deterministic execution)
# --dist=loadscope